"use strict";(()=>{var e={};e.id=300,e.ids=[300],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4383:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>y,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>w});var s={};r.r(s),r.d(s,{GET:()=>g,POST:()=>l});var a=r(9303),n=r(8716),i=r(670),o=r(9487),d=r(7070),u=r(1185),c=r(3591),p=r(4063);let g=async e=>{try{let{searchParams:t}=new URL(e.url),r=t.get("userId");if(!r||!u.Types.ObjectId.isValid(r))return new d.NextResponse(JSON.stringify({message:"Invalid or missing userId"}),{status:400});if(await (0,o.Z)(),!await c.Z.findById(r))return new d.NextResponse(JSON.stringify({message:"User not found in the database"}),{status:400});let s=await p.Z.find({user:new u.Types.ObjectId(r)});return new d.NextResponse(JSON.stringify(s),{status:200})}catch(e){return new d.NextResponse("Error in fetching categories"+e.message,{status:500})}},l=async e=>{try{let{searchParams:t}=new URL(e.url),r=t.get("userId"),{title:s}=await e.json();if(!r||!u.Types.ObjectId.isValid(r))return new d.NextResponse(JSON.stringify({message:"Invalid or missing userId"}),{status:400});if(await (0,o.Z)(),!await c.Z.findById(r))return new d.NextResponse(JSON.stringify({message:"User not found"}),{status:404});let a=new p.Z({title:s,user:new u.Types.ObjectId(r)});return await a.save(),new d.NextResponse(JSON.stringify({message:"Category is created",category:a}),{status:200})}catch(e){return new d.NextResponse("Error in creating category"+e.message,{status:500})}},m=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/(dashboard)/categories/route",pathname:"/api/categories",filename:"route",bundlePath:"app/api/(dashboard)/categories/route"},resolvedPagePath:"E:\\rest-api-next.js\\app\\api\\(dashboard)\\categories\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:y,staticGenerationAsyncStorage:w,serverHooks:f}=m,h="/api/(dashboard)/categories/route";function x(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:w})}},9487:(e,t,r)=>{r.d(t,{Z:()=>i});var s=r(1185),a=r.n(s);let n=process.env.MONGODB_URI,i=async()=>{let e=a().connection.readyState;if(1===e){console.log("Already connected");return}if(2===e){console.log("Connecting...");return}try{a().connect(n,{dbName:"REST_APIs_with_Nextjs",bufferCommands:!0}),console.log("Connected")}catch(e){throw console.log("Error: ",e),Error("Error: ",e)}}},4063:(e,t,r)=>{r.d(t,{Z:()=>n});var s=r(1185);let a=new s.Schema({title:{type:"string",required:!0},user:{type:s.Schema.Types.ObjectId,ref:"User"}},{timestamps:!0}),n=s.models.Category||(0,s.model)("Category",a)},3591:(e,t,r)=>{r.d(t,{Z:()=>n});var s=r(1185);let a=new s.Schema({email:{type:"string",required:!0,unique:!0},username:{type:"string",required:!0,unique:!0},password:{type:"string",required:!0}},{timestamps:!0}),n=s.models.User||(0,s.model)("User",a)}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972],()=>r(4383));module.exports=s})();